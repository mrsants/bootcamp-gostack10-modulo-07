{"version":3,"sources":["styles/global.js","components/Header/styles.js","components/Header/index.js","util/format.js","services/api.js","store/modules/cart/actions.js","pages/Home/styles.js","pages/Home/index.js","pages/Cart/styles.js","pages/Cart/index.js","routes.js","store/modules/rootReducer.js","store/modules/cart/reducer.js","services/hystory.js","store/modules/cart/sagas.js","store/modules/rootSaga.js","store/index.js","App.js","index.js","assets/images/background.svg","assets/images/logo.svg"],"names":["createGlobalStyle","background","Container","styled","header","Cart","Link","Header","cartSize","useSelector","state","cart","length","to","src","logo","alt","size","color","formatPrice","Intl","NumberFormat","style","currency","format","api","axios","create","baseURL","updateAmountRequest","id","amount","type","updateAmountSuccess","ProductList","ul","darken","Home","useState","products","setProducts","reduce","sumAmount","product","dispatch","useDispatch","useEffect","a","get","response","data","map","priceFormatted","price","loadProducts","key","image","title","onClick","CartActions","div","ProductTable","table","Total","NoProduct","total","sumTotal","subTotal","decrement","readOnly","value","increment","Routes","path","exact","component","combineReducers","action","produce","draft","push","productIndex","findIndex","p","splice","Number","history","createBrowserHistory","addToCart","updateAmount","select","find","productExists","call","stock","stockAmount","currentAmount","toast","error","put","all","takeLatest","rootSafa","sagaMiddleware","createSagaMiddleware","sagaMonitor","enhancer","applyMiddleware","store","createStore","rootReducer","run","rootSaga","App","autoClose","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4674ef56.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\nimport background from '../assets/images/background.svg';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default createGlobalStyle`\n@import url('https://fonts.googleapis.com/css?family=Roboto&display=swap');\n\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    background: #191920 url(${background}) no-repeat center top;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, button {\n    font: 14px Roboto, sans-serif;\n  }\n\n  #root {\n    max-width: 1020px;\n    margin: 0 auto;\n    padding: 0 20px 50px;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 50px 0;\n`;\n\nexport const Cart = styled(Link)`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  transition: opacity 0.2s;\n\n  &:hover {\n    opacity: 0.7;\n  }\n\n  div {\n    text-align: right;\n    margin-right: 10px;\n\n    strong {\n      display: block;\n      color: #fff;\n    }\n\n    span {\n      font-size: 12px;\n      color: #999;\n    }\n  }\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { MdShoppingBasket } from 'react-icons/md';\n\nimport { Container, Cart } from './styles';\nimport logo from '../../assets/images/logo.svg';\n\nexport default function Header() {\n  const cartSize = useSelector(state => state.cart.length);\n  return (\n    <Container>\n      <Link to=\"/\">\n        <img src={logo} alt=\"\" />\n      </Link>\n\n      <Cart to=\"/cart\">\n        <div>\n          <strong>Meu carrinho</strong>\n          <span>{cartSize} itens</span>\n        </div>\n        <MdShoppingBasket size={36} color=\"#fff\" />\n      </Cart>\n    </Container>\n  );\n}\n","export const { format: formatPrice } = new Intl.NumberFormat('pt-BR', {\n  style: 'currency',\n  currency: 'BRL',\n});\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:3000',\n});\n\nexport default api;\n","export function addToCartRequest(id) {\n  return {\n    type: '@cart/ADD_REQUEST',\n    id,\n  };\n}\n\nexport function addToCartSuccess(product) {\n  return {\n    type: '@cart/ADD_SUCCESS',\n    product,\n  };\n}\n\nexport function removeFromCart(id) {\n  return { type: '@cart/REMOVE', id };\n}\n\nexport function updateAmountRequest(id, amount) {\n  return { type: '@cart/UPDATE_AMOUNT_REQUEST', id, amount };\n}\n\nexport function updateAmountSuccess(id, amount) {\n  return { type: '@cart/UPDATE_AMOUNT_SUCCESS', id, amount };\n}\n","import styled from 'styled-components';\nimport { darken } from 'polished';\n\nexport const ProductList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 20px;\n  list-style: none;\n\n  li {\n    display: flex;\n    flex-direction: column;\n    background: #fff;\n    border-radius: 4px;\n    padding: 20px;\n\n    img {\n      align-self: center;\n      max-width: 250px;\n    }\n\n    > strong {\n      font-size: 16px;\n      line-height: 20px;\n      color: #333;\n      margin-top: 5px;\n    }\n\n    > span {\n      font-size: 21px;\n      font-weight: bold;\n      margin: 5px 0 20px;\n    }\n  }\n\n  button {\n    background: #7159c1;\n    color: #fff;\n    border: 0;\n    border-radius: 4px;\n    overflow: hidden;\n    margin-top: auto;\n\n    display: flex;\n    align-items: center;\n    transition: background 0.2s;\n\n    &:hover {\n      background: ${darken(0.03, '#7159c1')};\n    }\n\n    div {\n      display: flex;\n      align-items: center;\n      padding: 12px;\n      background: rgba(0, 0, 0, 0.1);\n\n      svg {\n        margin-right: 5px;\n      }\n    }\n\n    span {\n      flex: 1;\n      text-align: center;\n      font-weight: bold;\n    }\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { MdAddShoppingCart } from 'react-icons/md';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { formatPrice } from '../../util/format';\nimport api from '../../services/api';\nimport * as CartActions from '../../store/modules/cart/actions';\nimport { ProductList } from './styles';\n\nexport default function Home() {\n  const [products, setProducts] = useState([]);\n  const amount = useSelector(state =>\n    state.cart.reduce((sumAmount, product) => {\n      sumAmount[product.id] = product.amount;\n\n      return sumAmount;\n    }, {})\n  );\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    async function loadProducts() {\n      const response = await api.get('products');\n\n      const data = response.data.map(product => ({\n        ...product,\n        priceFormatted: formatPrice(product.price),\n      }));\n\n      setProducts(data);\n    }\n\n    loadProducts();\n  }, []);\n\n  function handleAddProdut(id) {\n    dispatch(CartActions.addToCartRequest(id));\n  }\n\n  return (\n    <ProductList>\n      {products.map(product => (\n        <li key={product.id}>\n          <img src={product.image} alt={product.title} />\n          <strong>{product.title}</strong>\n          <span>{product.priceFormatted}</span>\n\n          <button type=\"button\" onClick={() => handleAddProdut(product.id)}>\n            <div>\n              <MdAddShoppingCart size={16} color=\"#fff\" />{' '}\n              {amount[product.id] ?? 0}\n            </div>\n            <span>ADICIONAR AO CARRINHO</span>\n          </button>\n        </li>\n      ))}\n    </ProductList>\n  );\n}\n","import styled from 'styled-components';\nimport { darken } from 'polished';\n\nexport const Container = styled.div`\n  padding: 30px;\n  background: #fff;\n  border-radius: 4px;\n\n  footer {\n    margin-top: 30px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    button {\n      background: #7159c1;\n      color: #fff;\n      border: 0;\n      border-radius: 4px;\n      padding: 12px 20px;\n      font-weight: bold;\n      text-transform: uppercase;\n      transition: background 0.2s;\n\n      &:hover {\n        background: ${darken(0.03, '#7159c1')};\n      }\n    }\n  }\n`;\n\nexport const ProductTable = styled.table`\n  width: 100%;\n\n  thead th {\n    color: #999;\n    text-align: left;\n    padding: 12px;\n  }\n\n  tbody td {\n    padding: 12px;\n    border-bottom: 1px solid #eee;\n  }\n\n  img {\n    height: 100px;\n  }\n\n  strong {\n    color: #333;\n    display: block;\n  }\n\n  span {\n    display: block;\n    margin-top: 5px;\n    font-size: 18px;\n    font-weight: bold;\n  }\n\n  div {\n    display: flex;\n    align-items: center;\n\n    input {\n      border: 1px solid #ddd;\n      border-radius: 4px;\n      color: #666;\n      padding: 6px;\n      width: 50px;\n    }\n  }\n\n  button {\n    background: none;\n    border: 0;\n    padding: 6px;\n  }\n`;\n\nexport const Total = styled.div`\n  display: block;\n  align-items: baseline;\n\n  span {\n    color: #999;\n    font-weight: bold;\n  }\n\n  strong {\n    font-size: 28px;\n    margin-left: 5px;\n  }\n`;\n\nexport const NoProduct = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 20px;\n\n  h1 {\n    text-align: center;\n    color: #333;\n  }\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  MdRemoveCircleOutline,\n  MdAddCircleOutline,\n  MdDelete,\n} from 'react-icons/md';\nimport { formatPrice } from '../../util/format';\nimport * as CartActions from '../../store/modules/cart/actions';\nimport { Container, ProductTable, Total, NoProduct } from './styles';\n\n/**\n * Página responsável pela carrinho de compras\n */\nexport default function Cart() {\n  const total = useSelector(state =>\n    formatPrice(\n      state.cart.reduce((sumTotal, product) => {\n        return sumTotal + product.price * product.amount;\n      }, 0)\n    )\n  );\n  const cart = useSelector(state =>\n    state.cart.map(product => ({\n      ...product,\n      subTotal: formatPrice(product.price * product.amount),\n    }))\n  );\n\n  const dispatch = useDispatch();\n\n  function increment(product) {\n    dispatch(CartActions.updateAmountRequest(product.id, product.amount + 1));\n  }\n\n  function decrement(product) {\n    dispatch(CartActions.updateAmountRequest(product.id, product.amount - 1));\n  }\n\n  return (\n    <Container>\n      {cart.length > 0 ? (\n        <ProductTable>\n          <thead>\n            <tr>\n              <th />\n              <th>PRODUTO</th>\n              <th>QTD</th>\n              <th>SUBTOTAL</th>\n              <th />\n            </tr>\n          </thead>\n\n          <tbody>\n            {cart.map(product => (\n              <tr>\n                <td>\n                  <img src={product.image} alt={product.title} />\n                </td>\n                <td>\n                  <strong>{product.title}</strong>\n                  <span>{product.priceFormatted}</span>\n                </td>\n                <td>\n                  <div>\n                    <button type=\"button\">\n                      <MdRemoveCircleOutline\n                        size={20}\n                        color=\"#7159c1\"\n                        onClick={() => decrement(product)}\n                      />\n                    </button>\n                    <input type=\"number\" readOnly value={product.amount} />\n                    <button type=\"button\">\n                      <MdAddCircleOutline\n                        size={20}\n                        color=\"#7159c1\"\n                        onClick={() => increment(product)}\n                      />\n                    </button>\n                  </div>\n                </td>\n                <td>\n                  <strong>{product.subTotal}</strong>\n                </td>\n                <td>\n                  <button\n                    type=\"button\"\n                    onClick={() =>\n                      dispatch(CartActions.removeFromCart(product.id))\n                    }\n                  >\n                    <MdDelete size={20} color=\"#7159c1\" />\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </ProductTable>\n      ) : (\n        <NoProduct>\n          <h1>Carrinho vazio</h1>\n        </NoProduct>\n      )}\n\n      <footer>\n        <button type=\"button\">Finalizar Pedido</button>\n\n        <Total>\n          <span>TOTAL</span>\n          <strong>{total}</strong>\n        </Total>\n      </footer>\n    </Container>\n  );\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Cart from './pages/Cart';\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/\" component={Cart} />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import { combineReducers } from 'redux';\n\nimport cart from './cart/reducer';\n\nexport default combineReducers({\n  cart,\n});\n","import produce from 'immer';\n\nexport default function cart(state = [], action) {\n  switch (action.type) {\n    case '@cart/ADD_SUCCESS':\n      return produce(state, draft => {\n        const { product } = action;\n\n        draft.push(product);\n      });\n    case '@cart/REMOVE':\n      return produce(state, draft => {\n        const productIndex = draft.findIndex(p => p.id === action.id);\n\n        if (productIndex !== -1) {\n          draft.splice(productIndex, 1);\n        }\n      });\n\n    case '@cart/UPDATE_AMOUNT_SUCCESS': {\n      return produce(state, draft => {\n        const productIndex = draft.findIndex(p => p.id === action.id);\n\n        if (productIndex !== -1) {\n          draft[productIndex].amount = Number(action.amount);\n        }\n      });\n    }\n    default:\n      return state;\n  }\n}\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n","import { call, select, put, all, takeLatest } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport api from '../../../services/api';\nimport history from '../../../services/hystory';\nimport { formatPrice } from '../../../util/format';\n\nimport { addToCartSuccess, updateAmountSuccess } from './actions';\n\nfunction* addToCart({ id }) {\n  const productExists = yield select(state =>\n    state.cart.find(p => p.id === id)\n  );\n\n  const stock = yield call(api.get, `/stock/${id}`);\n\n  const stockAmount = stock.data.amount;\n  const currentAmount = productExists ? productExists.amount : 0;\n  const amount = currentAmount + 1;\n\n  if (amount > stockAmount) {\n    toast.error('Quantidade solicitada fora do estoque');\n    return;\n  }\n\n  if (productExists) {\n    yield put(updateAmountSuccess(id, amount));\n  } else {\n    const response = yield call(api.get, `/products/${id}`);\n\n    const data = {\n      ...response.data,\n      amount: 1,\n      priceFormatted: formatPrice(response.data.price),\n    };\n\n    yield put(addToCartSuccess(data));\n\n    history.push('/cart');\n  }\n}\n\nfunction* updateAmount({ id, amount }) {\n  if (amount <= 0) return;\n\n  const stock = yield call(api.get, `/stock/${id}`);\n  const stockAmount = stock.data.amount;\n\n  if (amount > stockAmount) {\n    toast.error('Quantidade solicitada fora do estoque');\n    return;\n  }\n\n  yield put(updateAmountSuccess(id, amount));\n}\n\nexport default all([\n  takeLatest('@cart/ADD_REQUEST', addToCart),\n  takeLatest('@cart/UPDATE_AMOUNT_REQUEST', updateAmount),\n]);\n","import { all } from 'redux-saga/effects';\n\nimport cart from './cart/sagas';\n\nexport default function* rootSafa() {\n  return yield all([cart]);\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './modules/rootReducer';\nimport rootSaga from './modules/rootSaga';\n\nconst sagaMonitor =\n  process.env.NODE_ENV === 'development'\n    ? console.tron.createSagaMonitor()\n    : null;\nconst sagaMiddleware = createSagaMiddleware({\n  sagaMonitor,\n});\n\nconst enhancer =\n  process.env.NODE_ENV === 'development'\n    ? compose(console.tron.createEnhancer(), applyMiddleware(sagaMiddleware))\n    : applyMiddleware(sagaMiddleware);\n\nconst store = createStore(rootReducer, enhancer);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport { Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\n\nimport './config/ReactotronConfig';\n\nimport GlobalStyle from './styles/global';\nimport Header from './components/Header';\nimport Routes from './routes';\n\nimport store from './store';\nimport history from './services/hystory';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router history={history}>\n        <Header />\n        <Routes />\n        <GlobalStyle />\n        <ToastContainer autoClose={3000} />\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/background.3c9a1ce5.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.879557c5.svg\";"],"sourceRoot":""}